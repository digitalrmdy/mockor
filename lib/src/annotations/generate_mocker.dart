///the annotation to be place on your mock method.
class GenerateMocker {
  /// the types to generate Mock classes for
  final List<Type> types;

  /// if **true**, no mocks will be generated by this builder
  /// but will use the names of classes generated by Mockito.
  /// if **false**, simple one line mock classes will be generated
  /// which can be useful for Mocktail.
  /// **true** by default
  final bool useMockitoGeneratedTypes;

  /// if **true**, Mockito's own `@GenerateMocks` annotation will be added to
  /// the generated mock method. [useMockitoGeneratedTypes] must be **true** as well.
  /// if **false** but [useMockitoGeneratedTypes] is **true**,
  /// then you should include a `@GenerateMocks` to the mock method yourself.
  /// **true** by default
  final bool generateMockitoAnnotation;

  /// Generate extensions for [mockitoGeneratedTypes] which casts it as the mock type.
  /// TODO expand on this
  /// **true** by default
  final bool generateMockExtensions;

  const GenerateMocker(
    this.types, {
    this.useMockitoGeneratedTypes = true,
    this.generateMockitoAnnotation = true,
    this.generateMockExtensions = true,
  });
}
